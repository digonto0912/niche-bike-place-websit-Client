{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport initializeFirebase from \"../Pages/Login/Login/Firebase/firebase.init\";\nimport { getAuth, createUserWithEmailAndPassword, signOut, onAuthStateChanged, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\"; //initialize firebase app\n\ninitializeFirebase();\n\nconst useFirebase = () => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [authError, setAuthError] = useState('');\n  const [isLoadeing, setIsLoading] = useState(true);\n  const auth = getAuth();\n  const googleProvider = new GoogleAuthProvider(); //sign in with google \n  // const signInWithGoogle = () => {\n  //     return signInWithPopup(auth, googleProvider)\n  // }\n\n  const signInWithGoogle = (location, history) => {\n    setIsLoading(true);\n    signInWithPopup(auth, googleProvider).then(result => {\n      const user = result.user;\n      setAuthError(''); // ...\n    }).catch(error => {\n      setAuthError(error.messages);\n    }).finally(() => setIsLoading(false));\n  }; //register with email and password \n\n\n  const registerUser = (email, password) => {\n    createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n      // Signed in \n      const user = userCredential.user; // ...\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message; // ..\n    });\n  }; // signed in user \n\n\n  const loginUser = (email, password) => {\n    signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      // Signed in \n      const user = userCredential.user; // ...\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n    });\n  }; //observe the user \n\n\n  useEffect(() => {\n    const unSubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser({});\n      }\n    });\n    return () => unSubscribe;\n  }, []); //log out\n\n  const logOut = () => {\n    signOut(auth).then(() => {// Sign-out successful.\n    }).catch(error => {// An error happened.\n    });\n  };\n\n  return {\n    user,\n    registerUser,\n    logOut,\n    loginUser,\n    signInWithGoogle,\n    setUser\n  };\n};\n\n_s(useFirebase, \"aj5sf6vF7m3KC2xaDmXzoXDqmes=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["/Users/sabbirziauddin/Desktop/Desktop – sabbir’s MacBook Pro/project/Mileston 12/Assignment 12/bike-place-client/src/hooks/useFirebase.js"],"names":["useEffect","useState","initializeFirebase","getAuth","createUserWithEmailAndPassword","signOut","onAuthStateChanged","signInWithEmailAndPassword","GoogleAuthProvider","signInWithPopup","useFirebase","user","setUser","authError","setAuthError","isLoadeing","setIsLoading","auth","googleProvider","signInWithGoogle","location","history","then","result","catch","error","messages","finally","registerUser","email","password","userCredential","errorCode","code","errorMessage","message","loginUser","unSubscribe","logOut"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport initializeFirebase from \"../Pages/Login/Login/Firebase/firebase.init\";\nimport { getAuth, createUserWithEmailAndPassword, signOut, onAuthStateChanged, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup} from \"firebase/auth\";\n\n\n\n//initialize firebase app\ninitializeFirebase();\n\nconst useFirebase =()=>{\n    const [user,setUser] =useState({});\n    const [authError,setAuthError] = useState('');\n    const [isLoadeing,setIsLoading] = useState(true);\n    const auth = getAuth();\n    const googleProvider = new GoogleAuthProvider();\n\n    //sign in with google \n    // const signInWithGoogle = () => {\n\n    //     return signInWithPopup(auth, googleProvider)\n\n    // }\n    const signInWithGoogle =(location,history)=>{\n        setIsLoading(true);\n        signInWithPopup(auth, googleProvider)\n            .then((result) => {\n                \n                const user = result.user;\n                setAuthError('');\n                // ...\n            }).catch((error) => {\n                \n                \n                setAuthError(error.messages);\n            }).finally(()=>setIsLoading(false));\n    }\n\n//register with email and password \n    const registerUser =(email,password)=>{\n        createUserWithEmailAndPassword(auth,email,password)\n        .then((userCredential) => {\n            // Signed in \n            const user = userCredential.user;\n            // ...\n        })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                // ..\n            });\n    }\n    // signed in user \n    const loginUser = (email,password)=>{\n        signInWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                // Signed in \n                const user = userCredential.user;\n                // ...\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n            });\n\n\n    }\n    //observe the user \n    useEffect(()=>{\n        const unSubscribe = onAuthStateChanged(auth, (user) => {\n            if (user) {\n                setUser(user)\n                \n            } else {\n                setUser({});\n                \n            }\n        });\n        return ()=>unSubscribe;\n\n    },[])\n\n    //log out\n    const logOut =()=>{\n        \n        signOut(auth).then(() => {\n            // Sign-out successful.\n        }).catch((error) => {\n            // An error happened.\n        });\n\n    }\n\n    return {\n        user,\n        registerUser,\n        logOut,\n        loginUser,\n        signInWithGoogle,setUser\n    }\n\n}\n\nexport default useFirebase;"]},"metadata":{},"sourceType":"module"}