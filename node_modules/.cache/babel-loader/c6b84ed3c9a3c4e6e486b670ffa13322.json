{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport initializeFirebase from \"../Pages/Login/Login/Firebase/firebase.init\";\nimport { getAuth, createUserWithEmailAndPassword, signOut, onAuthStateChanged, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\"; //initialize firebase app\n\ninitializeFirebase();\n\nconst useFirebase = () => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [authError, setAuthError] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const auth = getAuth();\n  const googleProvider = new GoogleAuthProvider(); //sign in with google \n\n  const signInWithGoogle = () => {\n    return signInWithPopup(auth, googleProvider);\n  }; // const signInWithGoogle =(location,history)=>{\n  //     setIsLoading(true);\n  //     signInWithPopup(auth, googleProvider)\n  //         .then((result) => {\n  //             const user = result.user;\n  //             setAuthError('');\n  //             // ...\n  //         }).catch((error) => {\n  //             setAuthError(error.messages);\n  //         }).finally(()=>setIsLoading(false));\n  // }\n  //register with email and password \n\n\n  const registerUser = (email, password) => {\n    setIsLoading(true);\n    createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n      setAuthError('');\n    }).catch(error => {\n      setAuthError(error.message);\n    }).finally(() => setIsLoading(false));\n  }; // signed in user \n\n\n  const loginUser = (email, password, location, history) => {\n    setIsLoading(true);\n    signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      var _location$state;\n\n      const destination = (location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) || '/';\n      history.replace(destination);\n      setAuthError('');\n    }).catch(error => {\n      setAuthError(error.message);\n    }).finally(() => setIsLoading(false));\n    ;\n  }; //observe the user \n\n\n  useEffect(() => {\n    const unSubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser({});\n      }\n\n      setIsLoading(false);\n    });\n    return () => unSubscribe;\n  }, []); //log out\n\n  const logOut = () => {\n    setIsLoading(true);\n    signOut(auth).then(() => {// Sign-out successful.\n    }).catch(error => {// An error happened.\n    }).finally(() => setIsLoading(false));\n  };\n\n  return {\n    user,\n    isLoadeing: isLoading,\n    registerUser,\n    logOut,\n    loginUser,\n    signInWithGoogle,\n    setUser,\n    authError\n  };\n};\n\n_s(useFirebase, \"GbzRCNm3pEeYBcqwiFY3M2BPZSU=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["/Users/sabbirziauddin/Desktop/Desktop – sabbir’s MacBook Pro/project/Mileston 12/Assignment 12/bike-place-client/src/hooks/useFirebase.js"],"names":["useEffect","useState","initializeFirebase","getAuth","createUserWithEmailAndPassword","signOut","onAuthStateChanged","signInWithEmailAndPassword","GoogleAuthProvider","signInWithPopup","useFirebase","user","setUser","authError","setAuthError","isLoading","setIsLoading","auth","googleProvider","signInWithGoogle","registerUser","email","password","then","userCredential","catch","error","message","finally","loginUser","location","history","destination","state","from","replace","unSubscribe","logOut","isLoadeing"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport initializeFirebase from \"../Pages/Login/Login/Firebase/firebase.init\";\nimport { getAuth, createUserWithEmailAndPassword, signOut, onAuthStateChanged, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup} from \"firebase/auth\";\n\n\n\n//initialize firebase app\ninitializeFirebase();\n\nconst useFirebase =()=>{\n    const [user,setUser] =useState({});\n    const [authError,setAuthError] = useState('');\n    const [isLoading,setIsLoading] = useState(true);\n    const auth = getAuth();\n    const googleProvider = new GoogleAuthProvider();\n\n    //sign in with google \n    const signInWithGoogle = () => {\n\n        return signInWithPopup(auth, googleProvider)\n\n    }\n    // const signInWithGoogle =(location,history)=>{\n    //     setIsLoading(true);\n    //     signInWithPopup(auth, googleProvider)\n    //         .then((result) => {\n                \n    //             const user = result.user;\n    //             setAuthError('');\n    //             // ...\n    //         }).catch((error) => {\n                \n                \n    //             setAuthError(error.messages);\n    //         }).finally(()=>setIsLoading(false));\n    // }\n\n//register with email and password \n    const registerUser =(email,password)=>{\n        setIsLoading(true);\n        createUserWithEmailAndPassword(auth,email,password)\n        .then((userCredential) => {\n            setAuthError('');\n        })\n            .catch((error) => {\n                \n                setAuthError(error.message) ;\n              \n            })\n            .finally(()=>setIsLoading(false));\n    }\n    // signed in user \n    const loginUser = (email,password,location,history)=>{\n        setIsLoading(true);\n        signInWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                const destination = location?.state?.from||'/';\n                history.replace(destination)\n               setAuthError('');\n            })\n            .catch((error) => {\n                setAuthError(error.message);\n            })\n            .finally(() => setIsLoading(false));;\n\n\n    }\n    //observe the user \n    useEffect(()=>{\n        const unSubscribe = onAuthStateChanged(auth, (user) => {\n            if (user) {\n                setUser(user)\n                \n            } else {\n                setUser({});\n                \n            }\n            setIsLoading(false);\n        });\n        return ()=>unSubscribe;\n\n    },[])\n\n    //log out\n    const logOut =()=>{\n        setIsLoading(true);\n        signOut(auth).then(() => {\n            // Sign-out successful.\n        }).catch((error) => {\n            // An error happened.\n        })\n        .finally(()=>setIsLoading(false));\n\n    }\n\n    return {\n        user,\n        isLoadeing: isLoading,\n        registerUser,\n        logOut,\n        loginUser,\n        signInWithGoogle,setUser,authError,\n       \n    }\n\n}\n\nexport default useFirebase;"]},"metadata":{},"sourceType":"module"}