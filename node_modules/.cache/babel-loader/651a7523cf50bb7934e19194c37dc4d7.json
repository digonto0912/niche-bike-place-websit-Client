{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport initializeFirebase from \"../Pages/Login/Login/Firebase/firebase.init\";\nimport { getAuth, createUserWithEmailAndPassword, signOut, onAuthStateChanged, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\"; //initialize firebase app\n\ninitializeFirebase();\n\nconst useFirebase = () => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const auth = getAuth();\n  const googleProvider = new GoogleAuthProvider(); //sign in with google \n\n  const signInWithGoogle = () => {\n    return signInWithPopup(auth, googleProvider);\n  }; //register with email and password \n\n\n  const registerUser = (email, password) => {\n    createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n      // Signed in \n      const user = userCredential.user; // ...\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message; // ..\n    });\n  }; // signed in user \n\n\n  const loginUser = (email, password) => {\n    signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      // Signed in \n      const user = userCredential.user; // ...\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n    });\n  }; //observe the user \n\n\n  useEffect(() => {\n    const unSubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser({});\n      }\n    });\n    return () => unSubscribe;\n  }, []); //log out\n\n  const logOut = () => {\n    signOut(auth).then(() => {// Sign-out successful.\n    }).catch(error => {// An error happened.\n    });\n  };\n\n  return {\n    user,\n    registerUser,\n    logOut,\n    loginUser\n  };\n};\n\n_s(useFirebase, \"nKBPTxqZ3/QuBJSQ4Q9Qx0pEwAc=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["/Users/sabbirziauddin/Desktop/Desktop – sabbir’s MacBook Pro/project/Mileston 12/Assignment 12/bike-place-client/src/hooks/useFirebase.js"],"names":["useEffect","useState","initializeFirebase","getAuth","createUserWithEmailAndPassword","signOut","onAuthStateChanged","signInWithEmailAndPassword","GoogleAuthProvider","signInWithPopup","useFirebase","user","setUser","auth","googleProvider","signInWithGoogle","registerUser","email","password","then","userCredential","catch","error","errorCode","code","errorMessage","message","loginUser","unSubscribe","logOut"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,kBAAP,MAA+B,6CAA/B;AACA,SAASC,OAAT,EAAkBC,8BAAlB,EAAkDC,OAAlD,EAA2DC,kBAA3D,EAA+EC,0BAA/E,EAA2GC,kBAA3G,EAA+HC,eAA/H,QAAqJ,eAArJ,C,CAIA;;AACAP,kBAAkB;;AAElB,MAAMQ,WAAW,GAAE,MAAI;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAMY,IAAI,GAAGV,OAAO,EAApB;AACA,QAAMW,cAAc,GAAG,IAAIN,kBAAJ,EAAvB,CAHmB,CAInB;;AACA,QAAMO,gBAAgB,GAAG,MAAM;AAC3B,WAAON,eAAe,CAACI,IAAD,EAAOC,cAAP,CAAtB;AAEH,GAHD,CALmB,CAUvB;;;AACI,QAAME,YAAY,GAAE,CAACC,KAAD,EAAOC,QAAP,KAAkB;AAClCd,IAAAA,8BAA8B,CAACS,IAAD,EAAMI,KAAN,EAAYC,QAAZ,CAA9B,CACCC,IADD,CACOC,cAAD,IAAoB;AACtB;AACA,YAAMT,IAAI,GAAGS,cAAc,CAACT,IAA5B,CAFsB,CAGtB;AACH,KALD,EAMKU,KANL,CAMYC,KAAD,IAAW;AACd,YAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,YAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B,CAFc,CAGd;AACH,KAVL;AAWH,GAZD,CAXmB,CAwBnB;;;AACA,QAAMC,SAAS,GAAG,CAACV,KAAD,EAAOC,QAAP,KAAkB;AAChCX,IAAAA,0BAA0B,CAACM,IAAD,EAAOI,KAAP,EAAcC,QAAd,CAA1B,CACKC,IADL,CACWC,cAAD,IAAoB;AACtB;AACA,YAAMT,IAAI,GAAGS,cAAc,CAACT,IAA5B,CAFsB,CAGtB;AACH,KALL,EAMKU,KANL,CAMYC,KAAD,IAAW;AACd,YAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,YAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B;AACH,KATL;AAYH,GAbD,CAzBmB,CAuCnB;;;AACA1B,EAAAA,SAAS,CAAC,MAAI;AACV,UAAM4B,WAAW,GAAGtB,kBAAkB,CAACO,IAAD,EAAQF,IAAD,IAAU;AACnD,UAAIA,IAAJ,EAAU;AACNC,QAAAA,OAAO,CAACD,IAAD,CAAP;AAEH,OAHD,MAGO;AACHC,QAAAA,OAAO,CAAC,EAAD,CAAP;AAEH;AACJ,KARqC,CAAtC;AASA,WAAO,MAAIgB,WAAX;AAEH,GAZQ,EAYP,EAZO,CAAT,CAxCmB,CAsDnB;;AACA,QAAMC,MAAM,GAAE,MAAI;AAEdxB,IAAAA,OAAO,CAACQ,IAAD,CAAP,CAAcM,IAAd,CAAmB,MAAM,CACrB;AACH,KAFD,EAEGE,KAFH,CAEUC,KAAD,IAAW,CAChB;AACH,KAJD;AAMH,GARD;;AAUA,SAAO;AACHX,IAAAA,IADG;AAEHK,IAAAA,YAFG;AAGHa,IAAAA,MAHG;AAIHF,IAAAA;AAJG,GAAP;AAOH,CAxED;;GAAMjB,W;;AA0EN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport initializeFirebase from \"../Pages/Login/Login/Firebase/firebase.init\";\nimport { getAuth, createUserWithEmailAndPassword, signOut, onAuthStateChanged, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup} from \"firebase/auth\";\n\n\n\n//initialize firebase app\ninitializeFirebase();\n\nconst useFirebase =()=>{\n    const [user,setUser] =useState({});\n    const auth = getAuth();\n    const googleProvider = new GoogleAuthProvider();\n    //sign in with google \n    const signInWithGoogle = () => {\n        return signInWithPopup(auth, googleProvider)\n\n    }\n\n//register with email and password \n    const registerUser =(email,password)=>{\n        createUserWithEmailAndPassword(auth,email,password)\n        .then((userCredential) => {\n            // Signed in \n            const user = userCredential.user;\n            // ...\n        })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                // ..\n            });\n    }\n    // signed in user \n    const loginUser = (email,password)=>{\n        signInWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                // Signed in \n                const user = userCredential.user;\n                // ...\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n            });\n\n\n    }\n    //observe the user \n    useEffect(()=>{\n        const unSubscribe = onAuthStateChanged(auth, (user) => {\n            if (user) {\n                setUser(user)\n                \n            } else {\n                setUser({});\n                \n            }\n        });\n        return ()=>unSubscribe;\n\n    },[])\n\n    //log out\n    const logOut =()=>{\n        \n        signOut(auth).then(() => {\n            // Sign-out successful.\n        }).catch((error) => {\n            // An error happened.\n        });\n\n    }\n\n    return {\n        user,\n        registerUser,\n        logOut,\n        loginUser,\n    }\n\n}\n\nexport default useFirebase;"]},"metadata":{},"sourceType":"module"}