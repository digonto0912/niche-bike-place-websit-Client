{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport initializeFirebase from \"../Pages/Login/Login/Firebase/firebase.init\";\nimport { getAuth, createUserWithEmailAndPassword, signOut, onAuthStateChanged, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup, updateProfile } from \"firebase/auth\"; //initialize firebase app\n\ninitializeFirebase();\n\nconst useFirebase = () => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [authError, setAuthError] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const auth = getAuth();\n  const googleProvider = new GoogleAuthProvider(); //sign in with google \n  // const signInWithGoogle = () => {\n  //     return signInWithPopup(auth, googleProvider)\n  // } \n  //sign in with google \n\n  const signInWithGoogle = (location, history) => {\n    setIsLoading(true);\n    signInWithPopup(auth, googleProvider).then(result => {\n      var _location$state;\n\n      const user = result.user;\n      saveUser(user.email, user.displayName, 'PUT');\n      setAuthError('');\n      const destination = (location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) || '/';\n      history.replace(destination); // ...\n    }).catch(error => {\n      setAuthError(error.messages);\n    }).finally(() => setIsLoading(false));\n  }; //register with email and password \n\n\n  const registerUser = (email, password, name, history) => {\n    setIsLoading(true);\n    createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n      setAuthError('');\n      const newUser = {\n        email,\n        displayName: name\n      };\n      setUser(newUser); //save user to database\n\n      saveUser(email, name, 'POST'); //send name to firebase after creatin \n\n      updateProfile(auth.currentUser, {\n        displayName: name\n      }).then(() => {}).catch(error => {});\n      history.replace('/');\n    }).catch(error => {\n      setAuthError(error.message);\n    }).finally(() => setIsLoading(false));\n  }; // signed in user \n\n\n  const loginUser = (email, password, location, history) => {\n    setIsLoading(true);\n    signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      var _location$state2;\n\n      const destination = (location === null || location === void 0 ? void 0 : (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.from) || '/';\n      history.replace(destination);\n      setAuthError('');\n    }).catch(error => {\n      setAuthError(error.message);\n    }).finally(() => setIsLoading(false));\n    ;\n  }; //observe the user \n\n\n  useEffect(() => {\n    const unSubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser({});\n      }\n\n      setIsLoading(false);\n    });\n    return () => unSubscribe;\n  }, []); //log out\n\n  const logOut = () => {\n    setIsLoading(true);\n    signOut(auth).then(() => {// Sign-out successful.\n    }).catch(error => {// An error happened.\n    }).finally(() => setIsLoading(false));\n  }; //save user to the database \n\n\n  const saveUser = (email, displayName, method) => {\n    const user = {\n      email,\n      displayName\n    };\n    fetch('http://localhost:5000/users', {\n      method: method,\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then();\n  };\n\n  return {\n    user,\n    isLoading,\n    registerUser,\n    logOut,\n    loginUser,\n    signInWithGoogle,\n    setUser,\n    authError,\n    setIsLoading\n  };\n};\n\n_s(useFirebase, \"GbzRCNm3pEeYBcqwiFY3M2BPZSU=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["/Users/sabbirziauddin/Desktop/Desktop – sabbir’s MacBook Pro/project/Mileston 12/Assignment 12/bike-place-client/src/hooks/useFirebase.js"],"names":["useEffect","useState","initializeFirebase","getAuth","createUserWithEmailAndPassword","signOut","onAuthStateChanged","signInWithEmailAndPassword","GoogleAuthProvider","signInWithPopup","updateProfile","useFirebase","user","setUser","authError","setAuthError","isLoading","setIsLoading","auth","googleProvider","signInWithGoogle","location","history","then","result","saveUser","email","displayName","destination","state","from","replace","catch","error","messages","finally","registerUser","password","name","userCredential","newUser","currentUser","message","loginUser","unSubscribe","logOut","method","fetch","headers","body","JSON","stringify"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport initializeFirebase from \"../Pages/Login/Login/Firebase/firebase.init\";\nimport { getAuth, createUserWithEmailAndPassword, signOut, onAuthStateChanged, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup, updateProfile} from \"firebase/auth\";\n\n\n\n//initialize firebase app\ninitializeFirebase();\n\nconst useFirebase =()=>{\n    const [user,setUser] =useState({});\n    const [authError,setAuthError] = useState('');\n    const [isLoading,setIsLoading] = useState(true);\n    const auth = getAuth();\n    const googleProvider = new GoogleAuthProvider();\n\n    //sign in with google \n    // const signInWithGoogle = () => {\n\n    //     return signInWithPopup(auth, googleProvider)\n\n    // } \n    //sign in with google \n\n    const signInWithGoogle =(location,history)=>{\n        setIsLoading(true);\n        signInWithPopup(auth, googleProvider)\n            .then((result) => {\n                \n                const user = result.user;\n                saveUser(user.email,user.displayName,'PUT');\n                setAuthError('');\n                const destination = location?.state?.from || '/';\n                history.replace(destination)\n                // ...\n            }).catch((error) => {\n                \n                \n                setAuthError(error.messages);\n            }).finally(()=>setIsLoading(false));\n    }\n\n//register with email and password \n    const registerUser =(email,password,name,history)=>{\n        setIsLoading(true);\n        createUserWithEmailAndPassword(auth,email,password)\n        .then((userCredential) => {\n            setAuthError('');\n            const newUser ={ email,displayName:name};\n            setUser(newUser);\n            //save user to database\n            saveUser(email,name,'POST')\n            //send name to firebase after creatin \n            updateProfile(auth.currentUser, {\n                displayName: name \n            }).then(() => {\n                \n            }).catch((error) => {\n                \n            });\n\n            \n            history.replace('/');\n        })\n            .catch((error) => {\n                \n                setAuthError(error.message) ;\n              \n            })\n            .finally(()=>setIsLoading(false));\n    }\n    // signed in user \n    const loginUser = (email,password,location,history)=>{\n        setIsLoading(true);\n        signInWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                const destination = location?.state?.from||'/';\n                history.replace(destination)\n               setAuthError('');\n            })\n            .catch((error) => {\n                setAuthError(error.message);\n            })\n            .finally(() => setIsLoading(false));;\n\n\n    }\n    //observe the user \n    useEffect(()=>{\n        const unSubscribe = onAuthStateChanged(auth, (user) => {\n            if (user) {\n                setUser(user)\n                \n            } else {\n                setUser({});\n                \n            }\n            setIsLoading(false);\n        });\n        return ()=>unSubscribe;\n\n    },[])\n\n    //log out\n    const logOut =()=>{\n        setIsLoading(true);\n        signOut(auth).then(() => {\n            // Sign-out successful.\n        }).catch((error) => {\n            // An error happened.\n        })\n        .finally(()=>setIsLoading(false));\n\n    }\n    //save user to the database \n    const saveUser = (email,displayName,method)=>{\n        const user ={\n            email, displayName\n        };\n        fetch('http://localhost:5000/users',{\n            method:(method),\n            headers:{\n                'content-type':'application/json'\n            },\n            body:JSON.stringify(user)\n        })\n        .then()\n\n    }\n\n    return {\n        user,\n        isLoading,\n        registerUser,\n        logOut,\n        loginUser,\n        signInWithGoogle, setUser, authError, setIsLoading\n       \n    }\n\n}\n\nexport default useFirebase;"]},"metadata":{},"sourceType":"module"}